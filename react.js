/**
 * 使用替换而不是修改的好处：
 * 1 轻松实现撤销、重做和时间旅行，切换历史数据
 * 2 记录变化，返回了新对象就是发生了改变，不用跟原来的做比较，浪费操作
 * 3 何时根据数据的改变重新渲染组件，纯组件 pure component
 * 4 React专门为Square这样的只有render方法的组件提供了一种更简洁的定义组件的方法：函数自定义组件
 * 5 如果组件包含state数据，那么这些数据要按顺序排列，方便增删查改，
 *    当一个新的key值 被添加到当前列表时，表示有一个组件被创建，被删除时有一个组件被摧毁
 *    key值可以让React明确标识每个组件，这样它才能在每次重新渲染时保有对应的状态数据，
 * 
 * React DOM 在渲染之前默认会 过滤 所有传入的值。它可以确保你的应用不会被注入攻击。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 XSS(跨站脚本) 攻击
 * ReactDOM确保浏览器DOM和reactdom保持一致
 * React元素都是immutable的
 * 所有的React组件必须像纯函数那样使用它们的props
 * 
 * 在多组件系统中，摧毁时要记得释放组件所占用的资源
 * componentDidMount生命周期钩子
 * 
 * 如果不在render中使用的东西，就不应该在状态中
 * setState()三件事需要知道：
 *  1 只能setState
 *  2 状态 更新可能异步，react可以将多个setState合并为一个调用来提高性能
 *  
 * react中的时间传入函数名，不可以使用return false来阻止默认行为，明确的使用preventDefault
 * 两种方法解决绑定问题
 1 * 属性初始化器
 2   箭头函数：箭头函数有个问题，每次渲染组件的时候都会创建一个不同的回调函数，如果这个回调函数作为属性传入下一个组件，
        这些组件可能会进行额外的重新渲染，通常建议在构造函数中绑定或使用属性初始化器

    使用bind函数传参，e要放在参数的最后面

    如果map嵌套层级很多 那就要考虑提取组件了

    受控组件
 */